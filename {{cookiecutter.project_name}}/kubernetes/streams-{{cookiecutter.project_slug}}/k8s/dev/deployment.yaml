---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: streams
    component: {{cookiecutter.project_slug}}
  annotations:
    fluxcd.io/automated: "true"
    fluxcd.io/tag.app: "semver: >= 0.1.0"
  name: streams-{{cookiecutter.project_slug}}
  namespace: streams
spec:
  replicas: 1
  selector:
    matchLabels:
      app: streams
      component: {{cookiecutter.project_slug}}
  template:
    metadata:
      labels:
        app: streams
        component: {{cookiecutter.project_slug}}
        team: streams
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8080"
    spec:
      containers:
      - image: 724428741115.dkr.ecr.eu-west-1.amazonaws.com/imgarena/streams/{{cookiecutter.project_slug}}/{{cookiecutter.project_slug}}-main:0.1.100
        imagePullPolicy: Always
        name: streams-{{cookiecutter.project_slug}}
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: "1.5"
            memory: 1.8Gi
          limits:
            cpu: "2"
            memory: 2Gi
        env:
        - name: _JAVA_OPTS
          value: "-XX:+UseContainerSupport -XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=50.0\
            \ -XX:+UseG1GC"
        - name: ENVIRONMENT
          value: "dev"
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /actuator/health
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /actuator/health/liveness
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
